pwd 显示当前路径；

mkdir 创建本地版本库目录：$mkdir name

git init 将版本库目录变成可管理库：$git init

git add 添加文件到暂存区：$git add 文件名(加扩展名)

git commit 保存git add添加的文件到库：$git commit -m "保存时要加的备注语"

git status 查看仓库当前状态：$git status

git diff 查看文件与之前的不同 $git diff 文件名(加扩展名)

git log 查看库中的提交日志：$git log
加--pretty=oneline参数：$git log --pretty=oneline

git reset 回退版本:
回退到上一版本：$git reset --hard HEAD^
回退到指定版本号的版本：$git reset --hard 版本号（只需前几位）
把git add后添加到暂存区的内容删掉：$git reset HEAD 文件名(加扩展名)

cat 查看文件内容：$cat 文件名(加扩展名)

git diff HEAD 查看工作区和版本库的差别：$git diff HEAD -- 文件名(加扩展名)

git checkout 用版本库里的版本替换工作区文件：$git checkout -- 文件名(加扩展名)

rm 删除文件: 
删除本地文件：$rm 文件名(加扩展名)
删除版本库文件：$git rm 文件名(加扩展名)

创建ssh key：$ ssh-keygen -t rsa -C "第一次使用git时输入的email"

git remote add origin 添加github地址：$git remote add origin 地址
/*使用ssh地址在以后提交时不用输账号密码,https要输*/

git push 将本地库推送到github：$git push -u origin master

git clone 克隆远程库到本地：$git clone 地址

创建分支：$git branch 分支名
跳转到分支：$git checkout 分支名
创建并转到新分支：$git checkout -b 分支名

查看所有分支：$git branch 

从分支回到上级：$git checkout 上级名

合并指定分支到当前分支：$git merge 要合并的分支名
禁用快速合并：$git merge --no--ff -m"备注信息"

查看分支合并状态：git log --graph --pretty=oneline --abbrev-commit

删除分支：$git branch -d 分支名
强制删除未合并分支：$git branch -D 分支名

冻结当前分支个工作区：$git stash
恢复冻结的工作区：$git stash apply
删除已恢复的冻结区：$git stash drop
恢复并删除冻结区：$git stash pop

推送指定分支到远程库：$git push origin 分支名

抓取分支：$git pull

如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name

创建标签：$git tag 标签名
查看标签：$git tag
为以前提交的老版本打标签：$git tag 标签名 commit-id
带说明的标签：$git tag 标签名 -m"说明"
查看说明：$git show 标签名
删除标签：$git tag -d 标签名
推送全部本地标签：$git push origin --tags
删除远程标签:1.删除本地标签
             1.删除远程：$git push origin :refs/tags/标签名
             


出现<END>标记且无法输入：按q


















